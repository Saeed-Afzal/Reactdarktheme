{"version":3,"sources":["logo.svg","IncDec.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["IncDec","useState","className","App","darkMode","setDarkMode","style","color","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAAe,I,YCiDAA,MArCf,WACE,MAA0BC,mBAAS,GAAnC,mBAgBA,OAhBA,UAiBE,qBAAKC,UAAU,YAAf,SAGE,oBAAIA,UAAY,OAAhB,+PC5BS,SAASC,IACtB,MAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,OAEE,sBAAKH,UAAWE,EAAW,YAAc,aAAzC,UACE,sBAAKF,UAAU,mBAAf,UACE,sBAAMI,MAAO,CAAEC,MAAOH,EAAW,OAAS,UAA1C,0BACA,qBAAKF,UAAU,kBAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOM,KAAK,WAAWC,SAAU,kBAAMJ,GAAaD,MACpD,sBAAMF,UAAU,eAAhB,oBAGJ,sBAAMI,MAAO,CAAEC,MAAOH,EAAW,UAAY,QAA7C,uBAEF,8BACE,qBAAIF,UAAU,cAAd,UAA6BE,EAAW,OAAS,QAAjD,cAEF,cAAC,EAAD,OCvBN,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e5851a05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container } from 'react-bootstrap';\nimport react, { useState, useEffect } from \"react\"\n\n\n\n\n\n\n\nfunction IncDec() {\n  const [count, setCount] = useState(1)\n  // const [counts, setCounts]= useState(1)\n\n\n\n  // const IncNum= ()=>{  \n  //   setCount(count+1)\n  // }\n  // const DecNum= ()=>{\n  //   setCount(count-1)\n  // }\n\n  // const ResNum= ()=>{  \n  //   setCount(0)\n  // }\n\n  return (\n    <div className=\"container\" >\n\n      {/* <h1>Counting App</h1>  */}\n      <h2 className = \"para\">Lorem ipsum dolor sit amet consectetur adipisicing elit. \n        Illum sequi ut hic molestias expedita reprehenderit, beatae totam,\n         facere delectus repellendus nemo! Ipsam praesentium deserunt sint\n          provident minima eligendi mollitia perspiciatis.</h2>\n\n      {/* <h1> {count} </h1> */}\n      {/* <div className=\"buttons\">\n      <Button variant=\"outline-success\" onClick={IncNum}>Increment</Button>{' '} <br />\n      <Button variant=\"outline-success\" onClick={DecNum}>Decrement</Button>{' '} <br />\n      <Button variant=\"outline-success\" onClick={ResNum}>Reset</Button>{' '} <br />\n      </div> */}\n      {/* <Button variant=\"outline-success\" onClick={()=>{setCounts(counts+1)}}>Increment {counts}</Button>{' '} */}\n    </div>\n  );\n}\n\nexport default IncDec;\n","import React, { useState } from \"react\";\nimport './App.css';\nimport IncDec from \"./IncDec\"\n\n//☀︎ ☽\nexport default function App() {\n  const [darkMode, setDarkMode] = useState(false);\n  return (\n    \n    <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\n      <div className=\"container toggle\">\n        <span style={{ color: darkMode ? \"grey\" : \"yellow\" }}>☀︎</span>\n        <div className=\"switch-checkbox\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" onChange={() => setDarkMode(!darkMode)} />\n            <span className=\"slider round\"> </span>\n          </label>\n        </div>\n        <span style={{ color: darkMode ? \"#c96dfd\" : \"grey\" }}>☽</span>\n      </div>\n      <div>\n        <h3 className=\"text-center\">{darkMode ? \"DARK\" : \"LIGHT\"} MODE </h3>\n      </div>\n      <IncDec/>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}